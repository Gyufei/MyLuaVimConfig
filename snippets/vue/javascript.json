{
    "import": {
        "prefix": "import",
        "body": [
            "import $1 from '$2'"
        ],
        "description": "import ... from ..."
    },
    "nextTick-word": {
        "prefix": "nextTick",
        "body": [
            "nextTick()"
        ],
        "description": "just a word"
    },
    "props-composition": {
        "prefix": "props",
        "body": [
            "const props = defineProps({",
           "$0",
            "});"
        ],
        "description": "A list/hash of attributes that are exposed to accept data from the parent component. "
    },    
    "emits-composition": {
        "prefix": "emits",
        "body": [
            "const emits = defineEmits([ $0 ]);"
        ],
        "description": "A list of events that componetnt can emits to the parent component. "
    },
    "computed-composition": {
        "prefix": "computed",
        "body": [
            "const $1 = computed(() => {",
            "$0",
            "});"
        ],
        "description": "Computed properties to be mixed into the Vue instance. "
    }, 
    "ref-composition": {
        "prefix": "ref",
        "body": [
            "const $1 = ref($0)"
        ],
        "description": "Ref properties to be mixed into the Vue instance. "
    },
    "watch-composition": {
        "prefix": "watch",
        "body": [
            "watch($1, ($2, $3) => {",
            "$0",
            "});"
        ],
        "description": "Watch over a reactive source and call a function in reaction to state changes "
    },
    "watchEffect-composition": {
        "prefix": "watchEffect",
        "body": [
            "watchEffect($1, ($2, $3) => {",
            "$0",
            "});"
        ],
        "description": "watchEffect from vue composition "
    },
    "onBeforeMount-composition": {
        "prefix": "onBeforeMount",
        "body": ["onBeforeMount(() => {$0})"],
        "description": "Vue before mount composition lifecycle hook"
    },
    "onMounted-composition": {
        "prefix": "onmounted",
        "body": ["onMounted(() => {$0})"],
        "description": "Vue mounted lifecycle hook"
    },
    "onBeforeUnmount-composition": {
        "prefix": "onBeforeUnmount",
        "body": ["onBeforeUnmount(() => {$0})"],
        "description": "Vue before unmount composition lifecycle hook"
    },
    "onUnmounted-composition": {
        "prefix": "onunmounted",
        "body": ["onUnmounted(() => {$0})"],
        "description": "Vue unMounted lifecycle hook"
    },
    "onBeforeUpdate-composition": {
        "prefix": "onBeforeUpdate",
        "body": ["onBeforeUpdate(() => {$0})"],
        "description": "Vue before update composition lifecycle hook"
    }, 
    "onUpdated-composition": {
        "prefix": "onupdated",
        "body": ["onUpdated(() => {$0})"],
        "description": "Vue updated lifecycle hook"
    },
    "onActivated-composition": {
        "prefix": "onActivated",
        "body": ["onActivated(() => {$0})"],
        "description": "Vue activated composition lifecycle hook"
    },
    "onDeactivated-composition": {
        "prefix": "onDeactivated",
        "body": ["onDeactivated(() => {$0})"],
        "description": "Vue deactivated composition lifecycle hook"
    },
    "destroyed": {
        "prefix": "destroyed",
        "body": [
            "destroyed() {",
            "\t$1",
            "},"
        ],
        "description": "Type: Function."
    },
    "errorCaptured": {
        "prefix": "errorCaptured",
        "body": [
            "errorCaptured: (err, vm, info) => {",
            "\t$1",
            "},"
        ],
        "description": "Type: (err: Error, vm: Component, info: string) => ?boolean"
    }
}
